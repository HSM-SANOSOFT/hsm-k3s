apiVersion: apps/v1
kind: Deployment
metadata:
  name: hsm-security-cams-shinobi
  namespace: security
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: hsm-security-cams-shinobi
  template:
    metadata:
      labels:
        app: hsm-security-cams-shinobi
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        fsGroup: 1000
      containers:
        - name: shinobi
          image: registry.gitlab.com/shinobi-systems/shinobi:dev
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: TZ
              value: "America/Guayaquil"
          #volumeMounts:
          #  - name: dbinit
          #    mountPath: /opt/dbinit
          #  - name: database
          #    mountPath: /var/lib/mysql
          #  - name: videos
          #    mountPath: /opt/shinobi/videos
          #  - name: shm
          #    mountPath: /dev/shm/streams
          #  - name: config
          #    mountPath: /home/Shinobi/conf.json
          #    subPath: conf.json
          #lifecycle:
          #  postStart:
          #    exec:
          #      command:
          #        - sh
          #        - -lc
          #        - |
          #          # Run only once per fresh DB
          #          if [ ! -f /var/lib/mysql/.hsm_shinobi_dbinit_done ]; then
          #            # Wait for MariaDB to accept connections (root has no password locally)
          #            for i in $(seq 1 60); do
          #              mysqladmin ping -u root >/dev/null 2>&1 && break
          #              sleep 2
          #            done
          #            # Apply SQL idempotently
          #            mysql -u root < /opt/dbinit/init.sql && \
          #            touch /var/lib/mysql/.hsm_shinobi_dbinit_done
          #          fi
          resources:
            requests:
              memory: "8Gi"
            limits:
              memory: "16Gi"

      #volumes:
      #  - name: database
      #    persistentVolumeClaim:
      #      claimName: hsm-security-cams-shinobi-database-pvc
      #  - name: videos
      #    persistentVolumeClaim:
      #      claimName: hsm-security-cams-shinobi-videos-pvc
      #  - name: shm
      #    emptyDir:
      #      medium: Memory
      #      sizeLimit: 1Gi
      #  - name: config
      #    configMap:
      #      name: hsm-security-cams-shinobi-config
      #  - name: dbinit
      #    configMap:
      #      name: hsm-security-cams-shinobi-dbinit
