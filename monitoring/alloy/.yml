apiVersion: v1
data:
  config.alloy: |-
    logging {
      level = "info"
      format = "logfmt"
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }

    discovery.kubernetes "nodes" {
      role = "node"
    }

    discovery.relabel "metrics" {
      targets = discovery.kubernetes.pods.targets
      rule {
        source_labels = ["__meta_kubernetes_pod_annotation_prometheus_io_port"]
        target_label  = "__meta_kubernetes_pod_container_port_number"
        action        = "keepequal"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_container_port_number"]
        regex         = ""
        action        = "drop"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_annotation_prometheus_io_path"]
        target_label  = "__metrics_path__"
        separator     = ""
        action        = "replace"
      }
    }

    prometheus.scrape "metrics" {
      targets         = discovery.relabel.metrics.output
      scrape_interval = "30s"
      forward_to      = [prometheus.remote_write.mimir.receiver]
    }

    discovery.relabel "pods_metrics" {
      targets = discovery.kubernetes.nodes.targets
      rule {
        replacement  = "kubernetes.default.svc:443"
        target_label = "__address__"
      }
      rule {
        regex         = "(.+)"
        replacement   = "/api/v1/nodes/$1/proxy/metrics/cadvisor"
        source_labels = ["__meta_kubernetes_node_name"]
        target_label  = "__metrics_path__"
      }
    }

    prometheus.scrape "pods_metrics" {
      targets            = discovery.relabel.pods_metrics.output
      job_name           = "integrations/kubernetes/kubelet"
      scheme             = "https"
      honor_labels       = true
      bearer_token_file  = "/run/secrets/kubernetes.io/serviceaccount/token"
      tls_config {
        insecure_skip_verify = true
        server_name          = "kubernetes"
      }
      scrape_interval    = "30s"
      forward_to         = [prometheus.remote_write.mimir.receiver]
    }

    prometheus.remote_write "mimir" {
      endpoint {
        url = "http://mimir-nginx.monitoring.svc.cluster.local/api/v1/push"
        headers = {
          "X-Scope-OrgID" = "1"
        }
      }
    },
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: grafana-alloy
    meta.helm.sh/release-namespace: monitoring
  creationTimestamp: "2025-04-28T21:35:23Z"
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/instance: grafana-alloy
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alloy
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/version: v1.8.2
    helm.sh/chart: alloy-1.0.2
  name: grafana-alloy
  namespace: monitoring
  resourceVersion: "215598"
  uid: 8b2e8ea4-49b5-4f9e-87f2-783973a6fb4d